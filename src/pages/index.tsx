import Head from 'next/head'
import { TeliaTextInput } from '@teliads/components/react'
import React from 'react'

export default function Home() {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <TeliaTextInput
        id='searchTerm'
        name='searchTerm'
        type='text'
        inputmode='text'
        label={'Search for device'}
        onInput={() => console.log('click')}
      />
    </>
  )
}

// By wrappiong TeliaTextInput with this "hackish" component, the hydration error won't trigger as TeliaTextInput gets rendered only on client side
const ClientOnly: React.FC<{
  children: React.ReactNode
}> = ({ children, ...delegated }) => {
  const [hasMounted, setHasMounted] = React.useState(false)

  React.useEffect(() => {
    setHasMounted(true)
  }, [])

  if (!hasMounted) {
    return null
  }

  return <div {...delegated}>{children}</div>
}
